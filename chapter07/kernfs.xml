<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>Подготовка виртуальных файловых систем ядра</title>

  <indexterm zone="ch-tools-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>Различные файловые системы, экспортируемые ядром, используются для связи с ним.
    Они виртуальны, поскольку не используют дисковое пространство.
    Содержимое такие файловых систем располагается в памяти.</para>

    <para>Начните с создания каталогов, к которым будут примонтированы файловые системы.</para>

<screen><userinput>mkdir -pv $LFS/{dev,proc,sys,run}</userinput></screen>

  <sect2>
    <title>Создание начальных узлов устройств</title>

    <para>Когда ядро загружает систему, ему требуется наличие нескольких устройств,
    в частности <filename class="devicefile">console</filename> и <filename
    class="devicefile">null</filename>. Эти узлы устройств должны быть созданы на диске и
    доступны до того как ядро создаст <systemitem class="filesystem">/dev</systemitem>
    а также, когда Linux запускается с <parameter>init=/bin/bash</parameter>.
    Создайте такие устройства выполнив команду:</para>

<screen><userinput>mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3</userinput></screen>

  </sect2>

  <sect2 id="ch-tools-bindmount">
    <title>Монтирование и заполнение каталога /dev</title>

      <para>Рекомендуемый метод заполнения каталога устройств 
      <filename class="directory">/dev</filename> это примонтировать виртуальную
      файловую систему (такую как <systemitem class="filesystem">tmpfs</systemitem>)
      в каталог <filename class="directory">/dev</filename> и разрешить устройствам
      динамически создаваться на этой виртальной файловой системе по мере их обнаружения
      или доступа к ним. Создание устройств обычно выполняет Udev во время процесса загрузки.
      Поскольку новая система ещё не имеет Udev, да и не загружена, следует
      примонтировать и заполнить <filename class="directory">/dev</filename> вручную.
      Это делается привязкой <filename class="directory">/dev</filename> хоста
      к новой системе.
      Привязка это особый вид монтирования, который позволяет создать зеркало каталога
      или другой точки монтирования по какому-либо пути.
      Воспользуйтесь следующей командой:</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-tools-kernfsmount">
    <title>Монтирование виртуальных файловых систем ядра</title>

      <para>Теперь примонтируйте оставшиеся виртуальные файловые системы:</para>

<screen><userinput>mount -v --bind /dev/pts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run</userinput></screen>
<!--
    <variablelist>
      <title>Значение параметров mount для devpts:</title>

      <varlistentry>
        <term><parameter>gid=5</parameter></term>
        <listitem>
          <para>Это гарантирует, что все созданные devpts узлы устройств будут принадлежать
          группе с ID 5. Этот идентификатор будет использоваться позднее для
          группы <systemitem class="groupname">tty</systemitem>. 
          Вместо имени группы используется идентификатор, потому что хост-система
          может иметь другой идентификатор группы
          <systemitem class="groupname">tty</systemitem>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>mode=0620</parameter></term>
        <listitem>
          <para>Это гарантирует, что все созданные devpts узлы будут иметь режим 0620
          (чтение и запись пользователем, запись группой). Совместно с
          вышеуказанной опцией такой подход гарантирует, что devpts создаст узлы устройств
          в соответствии с требованиями grantpt(), означая необязательность наличия
          <command>pt_chown</command> из Glibc (которая не устанавливается по умолчанию).</para>
        </listitem>
      </varlistentry>

    </variablelist>
-->
      <para>В некоторых хост-системах <filename>/dev/shm</filename> является
      символической ссылкой на <filename class="directory">/run/shm</filename>.
      /run tmpfs был смонтирован выше, так что в этом случае нужно создать только каталог.</para>

<screen><userinput>if [ -h $LFS/dev/shm ]; then
  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
fi</userinput></screen>

  </sect2>

</sect1>
